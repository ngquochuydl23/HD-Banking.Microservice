// <auto-generated />
using System;
using HD.Wallet.Transaction.Service.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HD.Wallet.Transaction.Service.Migrations
{
    [DbContext(typeof(TransactionDbContext))]
    [Migration("20241027072223_FixAccountBankValueObject")]
    partial class FixAccountBankValueObject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HD.Wallet.Transaction.Service.Infrastructure.Transactions.TransactionEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TransactionStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TransferContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("HD.Wallet.Transaction.Service.Infrastructure.Transactions.TransactionEntity", b =>
                {
                    b.OwnsOne("HD.Wallet.Transaction.Service.Infrastructure.Transactions.AccountBankValueObject", "DestAccount", b1 =>
                        {
                            b1.Property<string>("TransactionEntityId")
                                .HasColumnType("text");

                            b1.Property<string>("AccountNo")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("BankFullName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("BankName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Bin")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("LogoUrl")
                                .HasColumnType("text");

                            b1.Property<string>("OwnerName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("ShortName")
                                .HasColumnType("text");

                            b1.HasKey("TransactionEntityId");

                            b1.ToTable("Transaction");

                            b1.WithOwner()
                                .HasForeignKey("TransactionEntityId");
                        });

                    b.OwnsOne("HD.Wallet.Transaction.Service.Infrastructure.Transactions.AccountBankValueObject", "SourceAccount", b1 =>
                        {
                            b1.Property<string>("TransactionEntityId")
                                .HasColumnType("text");

                            b1.Property<string>("AccountNo")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("BankFullName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("BankName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Bin")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("LogoUrl")
                                .HasColumnType("text");

                            b1.Property<string>("OwnerName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("ShortName")
                                .HasColumnType("text");

                            b1.HasKey("TransactionEntityId");

                            b1.ToTable("Transaction");

                            b1.WithOwner()
                                .HasForeignKey("TransactionEntityId");
                        });

                    b.Navigation("DestAccount")
                        .IsRequired();

                    b.Navigation("SourceAccount")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
