version: '3.4'
services:
  kafka:
    image: docker.io/bitnami/kafka
    restart: 'always'
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://server-1.pgonevn.com:9092,EXTERNAL://192.168.1.3:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  hd-wallet.gateways-api:
    image: hd-wallet.gateways-api
    container_name: hd-wallet.gateways-api
    depends_on:
      - kafka
    build:
      context: ./
      dockerfile: Gateways/HD.Wallet.Gateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
    ports:
      - 8000:8000
    restart: always

  hd-wallet.account-api:
    image: hd-wallet.account-api
    container_name: hd-wallet.account-api
    depends_on:
      - kafka
    build:
      context: ./
      dockerfile: Services/HD.Wallet.Account.Service/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
    ports:
      - 8100:8100
    restart: always

  hd-wallet.transaction-api:
    image: hd-wallet.transaction-api
    container_name: hd-wallet.transaction-api
    depends_on:
      - kafka
    build:
      context: ./
      dockerfile: Services/HD.Wallet.Transaction.Service/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
    ports:
      - 8200:8200
    restart: always

  hd-wallet.identity-api:
    image: hd-wallet.identity-api
    container_name: hd-wallet.identity-api
    depends_on:
      - kafka
    build:
      context: ./
      dockerfile: Services/HD.Wallet.Identity.Service/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
    ports:
      - 8300:8300
    restart: always

  hd-wallet.banking-resource-api:
    image: hd-wallet.banking-resource-api
    container_name: hd-wallet.banking-resource-api
    depends_on:
      - kafka
    build:
      context: ./
      dockerfile: Services/HD.Wallet.BankingResource.Service/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
    ports:
      - 8400:8400
    restart: always

volumes:
  kafka_data:
    driver: local
